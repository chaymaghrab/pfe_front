/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as ɵngcc0 from '@angular/core';
export class DatepickerConfig {
    constructor() {
        this.locale = 'en';
        this.datepickerMode = 'day';
        this.startingDay = 0;
        this.yearRange = 20;
        this.minMode = 'day';
        this.maxMode = 'year';
        this.showWeeks = true;
        this.formatDay = 'DD';
        this.formatMonth = 'MMMM';
        this.formatYear = 'YYYY';
        this.formatDayHeader = 'dd';
        this.formatDayTitle = 'MMMM YYYY';
        this.formatMonthTitle = 'YYYY';
        this.onlyCurrentMonth = false;
        this.monthColLimit = 3;
        this.yearColLimit = 5;
        this.shortcutPropagation = false;
    }
}
DatepickerConfig.ɵfac = function DatepickerConfig_Factory(t) { return new (t || DatepickerConfig)(); };
/** @nocollapse */ DatepickerConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function DatepickerConfig_Factory() { return new DatepickerConfig(); }, token: DatepickerConfig, providedIn: "root" });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DatepickerConfig, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
if (false) {
    /** @type {?} */
    DatepickerConfig.prototype.locale;
    /** @type {?} */
    DatepickerConfig.prototype.datepickerMode;
    /** @type {?} */
    DatepickerConfig.prototype.startingDay;
    /** @type {?} */
    DatepickerConfig.prototype.yearRange;
    /** @type {?} */
    DatepickerConfig.prototype.minMode;
    /** @type {?} */
    DatepickerConfig.prototype.maxMode;
    /** @type {?} */
    DatepickerConfig.prototype.showWeeks;
    /** @type {?} */
    DatepickerConfig.prototype.formatDay;
    /** @type {?} */
    DatepickerConfig.prototype.formatMonth;
    /** @type {?} */
    DatepickerConfig.prototype.formatYear;
    /** @type {?} */
    DatepickerConfig.prototype.formatDayHeader;
    /** @type {?} */
    DatepickerConfig.prototype.formatDayTitle;
    /** @type {?} */
    DatepickerConfig.prototype.formatMonthTitle;
    /** @type {?} */
    DatepickerConfig.prototype.onlyCurrentMonth;
    /** @type {?} */
    DatepickerConfig.prototype.monthColLimit;
    /** @type {?} */
    DatepickerConfig.prototype.yearColLimit;
    /** @type {?} */
    DatepickerConfig.prototype.shortcutPropagation;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXBpY2tlci5jb25maWcuanMiLCJzb3VyY2VzIjpbIm5nOi9uZ3gtYm9vdHN0cmFwL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci5jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7OztBQUszQyxNQUFNLE9BQU8sZ0JBQWdCO0lBSDdCO1FBSUUsV0FBTSxHQUFHLElBQUksQ0FBQztRQUNkLG1CQUFjLEdBQUcsS0FBSyxDQUFDO1FBQ3ZCLGdCQUFXLEdBQUcsQ0FBQyxDQUFDO1FBQ2hCLGNBQVMsR0FBRyxFQUFFLENBQUM7UUFDZixZQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ2hCLFlBQU8sR0FBRyxNQUFNLENBQUM7UUFDakIsY0FBUyxHQUFHLElBQUksQ0FBQztRQUNqQixjQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLGdCQUFXLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLGVBQVUsR0FBRyxNQUFNLENBQUM7UUFDcEIsb0JBQWUsR0FBRyxJQUFJLENBQUM7UUFDdkIsbUJBQWMsR0FBRyxXQUFXLENBQUM7UUFDN0IscUJBQWdCLEdBQUcsTUFBTSxDQUFDO1FBQzFCLHFCQUFnQixHQUFHLEtBQUssQ0FBQztRQUN6QixrQkFBYSxHQUFHLENBQUMsQ0FBQztRQUNsQixpQkFBWSxHQUFHLENBQUMsQ0FBQztRQUNqQix3QkFBbUIsR0FBRyxLQUFLLENBQUM7S0FDN0I7O0NBQ0EsNkNBdEJBLFVBQVUsU0FBQyxrQkFDVixVQUFVLEVBQUUsTUFBTSxFQUVmO1dBREo7Ozs7OztnREFVVTs7O0lBUlQsa0NBQWM7O0lBQ2QsMENBQXVCOztJQUN2Qix1Q0FBZ0I7O0lBQ2hCLHFDQUFlOztJQUNmLG1DQUFnQjs7SUFDaEIsbUNBQWlCOztJQUNqQixxQ0FBaUI7O0lBQ2pCLHFDQUFpQjs7SUFDakIsdUNBQXFCOztJQUNyQixzQ0FBb0I7O0lBQ3BCLDJDQUF1Qjs7SUFDdkIsMENBQTZCOztJQUM3Qiw0Q0FBMEI7O0lBQzFCLDRDQUF5Qjs7SUFDekIseUNBQWtCOztJQUNsQix3Q0FBaUI7O0lBQ2pCLCtDQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgRGF0ZXBpY2tlckNvbmZpZyB7XG4gIGxvY2FsZSA9ICdlbic7XG4gIGRhdGVwaWNrZXJNb2RlID0gJ2RheSc7XG4gIHN0YXJ0aW5nRGF5ID0gMDtcbiAgeWVhclJhbmdlID0gMjA7XG4gIG1pbk1vZGUgPSAnZGF5JztcbiAgbWF4TW9kZSA9ICd5ZWFyJztcbiAgc2hvd1dlZWtzID0gdHJ1ZTtcbiAgZm9ybWF0RGF5ID0gJ0REJztcbiAgZm9ybWF0TW9udGggPSAnTU1NTSc7XG4gIGZvcm1hdFllYXIgPSAnWVlZWSc7XG4gIGZvcm1hdERheUhlYWRlciA9ICdkZCc7XG4gIGZvcm1hdERheVRpdGxlID0gJ01NTU0gWVlZWSc7XG4gIGZvcm1hdE1vbnRoVGl0bGUgPSAnWVlZWSc7XG4gIG9ubHlDdXJyZW50TW9udGggPSBmYWxzZTtcbiAgbW9udGhDb2xMaW1pdCA9IDM7XG4gIHllYXJDb2xMaW1pdCA9IDU7XG4gIHNob3J0Y3V0UHJvcGFnYXRpb24gPSBmYWxzZTtcbn1cbiJdfQ==