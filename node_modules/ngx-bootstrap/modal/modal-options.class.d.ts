import { StaticProvider, InjectionToken } from '@angular/core';
import { ClassName, DismissReasons, Selector, TransitionDurations } from './models';
import * as ɵngcc0 from '@angular/core';
export declare class ModalOptions<T = Object> {
    /**
     *  Allow user to ID for the modal. Otherwise, a unique number will be given
     */
    id?: number;
    /**
     *  Includes a modal-backdrop element. Alternatively,
     *  specify static for a backdrop which doesn't close the modal on click.
     */
    backdrop?: boolean | 'static';
    /**
     * Closes the modal when escape key is pressed.
     */
    keyboard?: boolean;
    focus?: boolean;
    /**
     * Shows the modal when initialized.
     */
    show?: boolean;
    /**
     * Ignore the backdrop click
     */
    ignoreBackdropClick?: boolean;
    /**
     * Css class for opened modal
     */
    class?: string;
    /**
     * Toggle animation
     */
    animated?: boolean;
    /**
     * Modal data
     */
    initialState?: Partial<T>;
    /**
     * Modal providers
     */
    providers?: StaticProvider[];
    /**
     * aria-labelledby attribute value to set on the modal window
     */
    ariaLabelledBy?: string;
    /**
     * aria-describedby attribute value to set on the modal window
     */
    ariaDescribedby?: string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ModalOptions<any>>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<ModalOptions<any>>;
}
export declare const modalConfigDefaults: ModalOptions;
export declare const MODAL_CONFIG_DEFAULT_OVERRIDE: InjectionToken<ModalOptions>;
export declare const CLASS_NAME: ClassName;
export declare const SELECTOR: Selector;
export declare const TRANSITION_DURATIONS: TransitionDurations;
export declare const DISMISS_REASONS: DismissReasons;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtb3B0aW9ucy5jbGFzcy5kLnRzIiwic291cmNlcyI6WyJtb2RhbC1vcHRpb25zLmNsYXNzLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBK0NBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RhdGljUHJvdmlkZXIsIEluamVjdGlvblRva2VuIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDbGFzc05hbWUsIERpc21pc3NSZWFzb25zLCBTZWxlY3RvciwgVHJhbnNpdGlvbkR1cmF0aW9ucyB9IGZyb20gJy4vbW9kZWxzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE1vZGFsT3B0aW9uczxUID0gT2JqZWN0PiB7XG4gICAgLyoqXG4gICAgICogIEFsbG93IHVzZXIgdG8gSUQgZm9yIHRoZSBtb2RhbC4gT3RoZXJ3aXNlLCBhIHVuaXF1ZSBudW1iZXIgd2lsbCBiZSBnaXZlblxuICAgICAqL1xuICAgIGlkPzogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqICBJbmNsdWRlcyBhIG1vZGFsLWJhY2tkcm9wIGVsZW1lbnQuIEFsdGVybmF0aXZlbHksXG4gICAgICogIHNwZWNpZnkgc3RhdGljIGZvciBhIGJhY2tkcm9wIHdoaWNoIGRvZXNuJ3QgY2xvc2UgdGhlIG1vZGFsIG9uIGNsaWNrLlxuICAgICAqL1xuICAgIGJhY2tkcm9wPzogYm9vbGVhbiB8ICdzdGF0aWMnO1xuICAgIC8qKlxuICAgICAqIENsb3NlcyB0aGUgbW9kYWwgd2hlbiBlc2NhcGUga2V5IGlzIHByZXNzZWQuXG4gICAgICovXG4gICAga2V5Ym9hcmQ/OiBib29sZWFuO1xuICAgIGZvY3VzPzogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBTaG93cyB0aGUgbW9kYWwgd2hlbiBpbml0aWFsaXplZC5cbiAgICAgKi9cbiAgICBzaG93PzogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBJZ25vcmUgdGhlIGJhY2tkcm9wIGNsaWNrXG4gICAgICovXG4gICAgaWdub3JlQmFja2Ryb3BDbGljaz86IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQ3NzIGNsYXNzIGZvciBvcGVuZWQgbW9kYWxcbiAgICAgKi9cbiAgICBjbGFzcz86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUb2dnbGUgYW5pbWF0aW9uXG4gICAgICovXG4gICAgYW5pbWF0ZWQ/OiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIE1vZGFsIGRhdGFcbiAgICAgKi9cbiAgICBpbml0aWFsU3RhdGU/OiBQYXJ0aWFsPFQ+O1xuICAgIC8qKlxuICAgICAqIE1vZGFsIHByb3ZpZGVyc1xuICAgICAqL1xuICAgIHByb3ZpZGVycz86IFN0YXRpY1Byb3ZpZGVyW107XG4gICAgLyoqXG4gICAgICogYXJpYS1sYWJlbGxlZGJ5IGF0dHJpYnV0ZSB2YWx1ZSB0byBzZXQgb24gdGhlIG1vZGFsIHdpbmRvd1xuICAgICAqL1xuICAgIGFyaWFMYWJlbGxlZEJ5Pzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIGFyaWEtZGVzY3JpYmVkYnkgYXR0cmlidXRlIHZhbHVlIHRvIHNldCBvbiB0aGUgbW9kYWwgd2luZG93XG4gICAgICovXG4gICAgYXJpYURlc2NyaWJlZGJ5Pzogc3RyaW5nO1xufVxuZXhwb3J0IGRlY2xhcmUgY29uc3QgbW9kYWxDb25maWdEZWZhdWx0czogTW9kYWxPcHRpb25zO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgTU9EQUxfQ09ORklHX0RFRkFVTFRfT1ZFUlJJREU6IEluamVjdGlvblRva2VuPE1vZGFsT3B0aW9ucz47XG5leHBvcnQgZGVjbGFyZSBjb25zdCBDTEFTU19OQU1FOiBDbGFzc05hbWU7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBTRUxFQ1RPUjogU2VsZWN0b3I7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBUUkFOU0lUSU9OX0RVUkFUSU9OUzogVHJhbnNpdGlvbkR1cmF0aW9ucztcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IERJU01JU1NfUkVBU09OUzogRGlzbWlzc1JlYXNvbnM7XG4iXX0=