import { ElementRef, ViewContainerRef, Renderer2, Injector } from '@angular/core';
import { IComponentBase } from '@syncfusion/ej2-angular-base';
import { DateTimePicker } from '@syncfusion/ej2-calendars';
import * as ɵngcc0 from '@angular/core';
export declare const inputs: string[];
export declare const outputs: string[];
export declare const twoWays: string[];
/**
 * Represents the Essential JS 2 Angular DateTimePicker Component.
 * ```html
 * <ejs-datetimepicker [value]='dateTime'></ejs-datetimepicker>
 * ```
 */
export declare class DateTimePickerComponent extends DateTimePicker implements IComponentBase {
    private ngEle;
    private srenderer;
    private viewContainerRef;
    private injector;
    formCompContext: any;
    formContext: any;
    tagObjects: any;
    blur: any;
    change: any;
    cleared: any;
    close: any;
    created: any;
    destroyed: any;
    focus: any;
    navigated: any;
    open: any;
    renderDayCell: any;
    valueChange: any;
    private skipFromEvent;
    constructor(ngEle: ElementRef, srenderer: Renderer2, viewContainerRef: ViewContainerRef, injector: Injector);
    registerOnChange(registerFunction: (_: any) => void): void;
    registerOnTouched(registerFunction: () => void): void;
    writeValue(value: any): void;
    setDisabledState(disabled: boolean): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    ngAfterContentChecked(): void;
    registerEvents: (eventList: string[]) => void;
    addTwoWay: (propList: string[]) => void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DateTimePickerComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DateTimePickerComponent, "ejs-datetimepicker", never, {
    "allowEdit": "allowEdit";
    "calendarMode": "calendarMode";
    "cssClass": "cssClass";
    "dayHeaderFormat": "dayHeaderFormat";
    "depth": "depth";
    "enableMask": "enableMask";
    "enablePersistence": "enablePersistence";
    "enableRtl": "enableRtl";
    "enabled": "enabled";
    "firstDayOfWeek": "firstDayOfWeek";
    "floatLabelType": "floatLabelType";
    "format": "format";
    "htmlAttributes": "htmlAttributes";
    "isMultiSelection": "isMultiSelection";
    "keyConfigs": "keyConfigs";
    "locale": "locale";
    "maskPlaceholder": "maskPlaceholder";
    "max": "max";
    "min": "min";
    "openOnFocus": "openOnFocus";
    "placeholder": "placeholder";
    "readonly": "readonly";
    "scrollTo": "scrollTo";
    "serverTimezoneOffset": "serverTimezoneOffset";
    "showClearButton": "showClearButton";
    "showTodayButton": "showTodayButton";
    "start": "start";
    "step": "step";
    "strictMode": "strictMode";
    "timeFormat": "timeFormat";
    "value": "value";
    "values": "values";
    "weekNumber": "weekNumber";
    "weekRule": "weekRule";
    "width": "width";
    "zIndex": "zIndex";
}, {
    "blur": "blur";
    "change": "change";
    "cleared": "cleared";
    "close": "close";
    "created": "created";
    "destroyed": "destroyed";
    "focus": "focus";
    "navigated": "navigated";
    "open": "open";
    "renderDayCell": "renderDayCell";
    "valueChange": "valueChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXRpbWVwaWNrZXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImRhdGV0aW1lcGlja2VyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF3Q0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBWaWV3Q29udGFpbmVyUmVmLCBSZW5kZXJlcjIsIEluamVjdG9yIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJQ29tcG9uZW50QmFzZSB9IGZyb20gJ0BzeW5jZnVzaW9uL2VqMi1hbmd1bGFyLWJhc2UnO1xuaW1wb3J0IHsgRGF0ZVRpbWVQaWNrZXIgfSBmcm9tICdAc3luY2Z1c2lvbi9lajItY2FsZW5kYXJzJztcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IGlucHV0czogc3RyaW5nW107XG5leHBvcnQgZGVjbGFyZSBjb25zdCBvdXRwdXRzOiBzdHJpbmdbXTtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IHR3b1dheXM6IHN0cmluZ1tdO1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBFc3NlbnRpYWwgSlMgMiBBbmd1bGFyIERhdGVUaW1lUGlja2VyIENvbXBvbmVudC5cbiAqIGBgYGh0bWxcbiAqIDxlanMtZGF0ZXRpbWVwaWNrZXIgW3ZhbHVlXT0nZGF0ZVRpbWUnPjwvZWpzLWRhdGV0aW1lcGlja2VyPlxuICogYGBgXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIERhdGVUaW1lUGlja2VyQ29tcG9uZW50IGV4dGVuZHMgRGF0ZVRpbWVQaWNrZXIgaW1wbGVtZW50cyBJQ29tcG9uZW50QmFzZSB7XG4gICAgcHJpdmF0ZSBuZ0VsZTtcbiAgICBwcml2YXRlIHNyZW5kZXJlcjtcbiAgICBwcml2YXRlIHZpZXdDb250YWluZXJSZWY7XG4gICAgcHJpdmF0ZSBpbmplY3RvcjtcbiAgICBmb3JtQ29tcENvbnRleHQ6IGFueTtcbiAgICBmb3JtQ29udGV4dDogYW55O1xuICAgIHRhZ09iamVjdHM6IGFueTtcbiAgICBibHVyOiBhbnk7XG4gICAgY2hhbmdlOiBhbnk7XG4gICAgY2xlYXJlZDogYW55O1xuICAgIGNsb3NlOiBhbnk7XG4gICAgY3JlYXRlZDogYW55O1xuICAgIGRlc3Ryb3llZDogYW55O1xuICAgIGZvY3VzOiBhbnk7XG4gICAgbmF2aWdhdGVkOiBhbnk7XG4gICAgb3BlbjogYW55O1xuICAgIHJlbmRlckRheUNlbGw6IGFueTtcbiAgICB2YWx1ZUNoYW5nZTogYW55O1xuICAgIHByaXZhdGUgc2tpcEZyb21FdmVudDtcbiAgICBjb25zdHJ1Y3RvcihuZ0VsZTogRWxlbWVudFJlZiwgc3JlbmRlcmVyOiBSZW5kZXJlcjIsIHZpZXdDb250YWluZXJSZWY6IFZpZXdDb250YWluZXJSZWYsIGluamVjdG9yOiBJbmplY3Rvcik7XG4gICAgcmVnaXN0ZXJPbkNoYW5nZShyZWdpc3RlckZ1bmN0aW9uOiAoXzogYW55KSA9PiB2b2lkKTogdm9pZDtcbiAgICByZWdpc3Rlck9uVG91Y2hlZChyZWdpc3RlckZ1bmN0aW9uOiAoKSA9PiB2b2lkKTogdm9pZDtcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBhbnkpOiB2b2lkO1xuICAgIHNldERpc2FibGVkU3RhdGUoZGlzYWJsZWQ6IGJvb2xlYW4pOiB2b2lkO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBuZ0FmdGVyQ29udGVudENoZWNrZWQoKTogdm9pZDtcbiAgICByZWdpc3RlckV2ZW50czogKGV2ZW50TGlzdDogc3RyaW5nW10pID0+IHZvaWQ7XG4gICAgYWRkVHdvV2F5OiAocHJvcExpc3Q6IHN0cmluZ1tdKSA9PiB2b2lkO1xufVxuIl19