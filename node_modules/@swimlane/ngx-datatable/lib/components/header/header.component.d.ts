import { EventEmitter, ChangeDetectorRef } from '@angular/core';
import { SortType } from '../../types/sort.type';
import { SelectionType } from '../../types/selection.type';
import { DataTableColumnDirective } from '../columns/column.directive';
import * as ɵngcc0 from '@angular/core';
export declare class DataTableHeaderComponent {
    private cd;
    sortAscendingIcon: any;
    sortDescendingIcon: any;
    scrollbarH: boolean;
    dealsWithGroup: boolean;
    targetMarkerTemplate: any;
    targetMarkerContext: any;
    innerWidth: number;
    sorts: any[];
    sortType: SortType;
    allRowsSelected: boolean;
    selectionType: SelectionType;
    reorderable: boolean;
    dragEventTarget: any;
    headerHeight: any;
    columns: any[];
    offsetX: number;
    sort: EventEmitter<any>;
    reorder: EventEmitter<any>;
    resize: EventEmitter<any>;
    select: EventEmitter<any>;
    columnContextmenu: EventEmitter<{
        event: MouseEvent;
        column: any;
    }>;
    _columnsByPin: any;
    _columnGroupWidths: any;
    _innerWidth: number;
    _offsetX: number;
    _columns: any[];
    _headerHeight: string;
    _styleByGroup: {
        [prop: string]: {};
    };
    constructor(cd: ChangeDetectorRef);
    onLongPressStart({ event, model }: {
        event: any;
        model: any;
    }): void;
    onLongPressEnd({ event, model }: {
        event: any;
        model: any;
    }): void;
    readonly headerWidth: string;
    trackByGroups(index: number, colGroup: any): any;
    columnTrackingFn(index: number, column: any): any;
    onColumnResized(width: number, column: DataTableColumnDirective): void;
    onColumnReordered({ prevIndex, newIndex, model }: any): void;
    onTargetChanged({ prevIndex, newIndex, initialIndex }: any): void;
    getColumn(index: number): any;
    onSort({ column, prevValue, newValue }: any): void;
    calcNewSorts(column: any, prevValue: number, newValue: number): any[];
    setStylesByGroup(): void;
    calcStylesByGroup(group: string): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataTableHeaderComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DataTableHeaderComponent, "datatable-header", never, {
    "innerWidth": "innerWidth";
    "headerHeight": "headerHeight";
    "columns": "columns";
    "offsetX": "offsetX";
    "sorts": "sorts";
    "sortAscendingIcon": "sortAscendingIcon";
    "sortDescendingIcon": "sortDescendingIcon";
    "scrollbarH": "scrollbarH";
    "dealsWithGroup": "dealsWithGroup";
    "targetMarkerTemplate": "targetMarkerTemplate";
    "sortType": "sortType";
    "allRowsSelected": "allRowsSelected";
    "selectionType": "selectionType";
    "reorderable": "reorderable";
}, {
    "sort": "sort";
    "reorder": "reorder";
    "resize": "resize";
    "select": "select";
    "columnContextmenu": "columnContextmenu";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJoZWFkZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBSUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXVEQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNvcnRUeXBlIH0gZnJvbSAnLi4vLi4vdHlwZXMvc29ydC50eXBlJztcbmltcG9ydCB7IFNlbGVjdGlvblR5cGUgfSBmcm9tICcuLi8uLi90eXBlcy9zZWxlY3Rpb24udHlwZSc7XG5pbXBvcnQgeyBEYXRhVGFibGVDb2x1bW5EaXJlY3RpdmUgfSBmcm9tICcuLi9jb2x1bW5zL2NvbHVtbi5kaXJlY3RpdmUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRGF0YVRhYmxlSGVhZGVyQ29tcG9uZW50IHtcbiAgICBwcml2YXRlIGNkO1xuICAgIHNvcnRBc2NlbmRpbmdJY29uOiBhbnk7XG4gICAgc29ydERlc2NlbmRpbmdJY29uOiBhbnk7XG4gICAgc2Nyb2xsYmFySDogYm9vbGVhbjtcbiAgICBkZWFsc1dpdGhHcm91cDogYm9vbGVhbjtcbiAgICB0YXJnZXRNYXJrZXJUZW1wbGF0ZTogYW55O1xuICAgIHRhcmdldE1hcmtlckNvbnRleHQ6IGFueTtcbiAgICBpbm5lcldpZHRoOiBudW1iZXI7XG4gICAgc29ydHM6IGFueVtdO1xuICAgIHNvcnRUeXBlOiBTb3J0VHlwZTtcbiAgICBhbGxSb3dzU2VsZWN0ZWQ6IGJvb2xlYW47XG4gICAgc2VsZWN0aW9uVHlwZTogU2VsZWN0aW9uVHlwZTtcbiAgICByZW9yZGVyYWJsZTogYm9vbGVhbjtcbiAgICBkcmFnRXZlbnRUYXJnZXQ6IGFueTtcbiAgICBoZWFkZXJIZWlnaHQ6IGFueTtcbiAgICBjb2x1bW5zOiBhbnlbXTtcbiAgICBvZmZzZXRYOiBudW1iZXI7XG4gICAgc29ydDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgcmVvcmRlcjogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgcmVzaXplOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBzZWxlY3Q6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGNvbHVtbkNvbnRleHRtZW51OiBFdmVudEVtaXR0ZXI8e1xuICAgICAgICBldmVudDogTW91c2VFdmVudDtcbiAgICAgICAgY29sdW1uOiBhbnk7XG4gICAgfT47XG4gICAgX2NvbHVtbnNCeVBpbjogYW55O1xuICAgIF9jb2x1bW5Hcm91cFdpZHRoczogYW55O1xuICAgIF9pbm5lcldpZHRoOiBudW1iZXI7XG4gICAgX29mZnNldFg6IG51bWJlcjtcbiAgICBfY29sdW1uczogYW55W107XG4gICAgX2hlYWRlckhlaWdodDogc3RyaW5nO1xuICAgIF9zdHlsZUJ5R3JvdXA6IHtcbiAgICAgICAgW3Byb3A6IHN0cmluZ106IHt9O1xuICAgIH07XG4gICAgY29uc3RydWN0b3IoY2Q6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBvbkxvbmdQcmVzc1N0YXJ0KHsgZXZlbnQsIG1vZGVsIH06IHtcbiAgICAgICAgZXZlbnQ6IGFueTtcbiAgICAgICAgbW9kZWw6IGFueTtcbiAgICB9KTogdm9pZDtcbiAgICBvbkxvbmdQcmVzc0VuZCh7IGV2ZW50LCBtb2RlbCB9OiB7XG4gICAgICAgIGV2ZW50OiBhbnk7XG4gICAgICAgIG1vZGVsOiBhbnk7XG4gICAgfSk6IHZvaWQ7XG4gICAgcmVhZG9ubHkgaGVhZGVyV2lkdGg6IHN0cmluZztcbiAgICB0cmFja0J5R3JvdXBzKGluZGV4OiBudW1iZXIsIGNvbEdyb3VwOiBhbnkpOiBhbnk7XG4gICAgY29sdW1uVHJhY2tpbmdGbihpbmRleDogbnVtYmVyLCBjb2x1bW46IGFueSk6IGFueTtcbiAgICBvbkNvbHVtblJlc2l6ZWQod2lkdGg6IG51bWJlciwgY29sdW1uOiBEYXRhVGFibGVDb2x1bW5EaXJlY3RpdmUpOiB2b2lkO1xuICAgIG9uQ29sdW1uUmVvcmRlcmVkKHsgcHJldkluZGV4LCBuZXdJbmRleCwgbW9kZWwgfTogYW55KTogdm9pZDtcbiAgICBvblRhcmdldENoYW5nZWQoeyBwcmV2SW5kZXgsIG5ld0luZGV4LCBpbml0aWFsSW5kZXggfTogYW55KTogdm9pZDtcbiAgICBnZXRDb2x1bW4oaW5kZXg6IG51bWJlcik6IGFueTtcbiAgICBvblNvcnQoeyBjb2x1bW4sIHByZXZWYWx1ZSwgbmV3VmFsdWUgfTogYW55KTogdm9pZDtcbiAgICBjYWxjTmV3U29ydHMoY29sdW1uOiBhbnksIHByZXZWYWx1ZTogbnVtYmVyLCBuZXdWYWx1ZTogbnVtYmVyKTogYW55W107XG4gICAgc2V0U3R5bGVzQnlHcm91cCgpOiB2b2lkO1xuICAgIGNhbGNTdHlsZXNCeUdyb3VwKGdyb3VwOiBzdHJpbmcpOiBhbnk7XG59XG4iXX0=